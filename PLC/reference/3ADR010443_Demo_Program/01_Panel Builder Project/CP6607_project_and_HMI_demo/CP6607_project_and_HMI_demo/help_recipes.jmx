<wgtPage rev="1" projectType="HMI Project">
 <object pageName="Help_Recipes" singleInstance="true" pageType="modal" pageSize="700,400" class="DialogWgt" dataWndSize="0,70" downloadPrepDone="true" px="0" usedFonts="Arial" py="0" titlebar="false" staticFile="opt/help_recipes.png" dynPosition="false" id="Help_Recipes" titleName="" staticOptEnable="true">
  <wgtStyle width="700" x="0" y="0" height="400" ver="020800424" v="02.08.00.424"/>
  <object class="GroupWgt" id="GroupWgt1">
   <wgtStyle width="700" x="0" y="0" cx="350" cy="200" height="400" lock="true"/>
   <object class="ImageWgt" id="GroupWgt1.image1" static="true">
    <wgtStyle width="24" imagePath="images/UI_Close_24.png" x="666" y="10" cx="12" cy="12" height="24"/>
   </object>
   <object class="ButtonWgt" hmiStyle="type:btn" id="GroupWgt1.hotspotbtn">
    <wgtStyle width="40" x="658" y="2" fill="rgb(160,160,164)" dx="1" cx="19.69" form="hotspot" dy="-1" cy="19.61" height="40" releasePath="../../shared/gallery/images/bu_other/win-like.svg" needlePath="../../shared/gallery/images/bu_other/win-like-press.svg" type="momentary" value="0" pushColor="rgb(128,128,0)"/>
    <links>
     <action pageName="" class="CloseDialogAction" attribute="onMouseClick" event="onMouseClick" actionID="0" closeParam="Selected" actionWgt="_PageMgr"/>
    </links>
   </object>
   <object class="ShapeWgt" id="GroupWgt1.rect6" static="true">
    <wgtStyle width="2" x="0" y="0" fill="rgb(180,180,180)" cx="0.97" cy="200" height="400" nodeName="rect" stroke="rgb(180,180,180)"/>
   </object>
   <object class="ShapeWgt" id="GroupWgt1.rect7" static="true">
    <wgtStyle width="700" x="0" y="0" fill="rgb(180,180,180)" cx="339.50" cy="1" height="2" nodeName="rect" stroke="rgb(180,180,180)"/>
   </object>
   <object class="ShapeWgt" id="GroupWgt1.rect1" static="true">
    <wgtStyle width="2" x="698" y="0" fill="rgb(180,180,180)" cx="0.97" cy="200" height="400" nodeName="rect" stroke="rgb(180,180,180)"/>
   </object>
   <object class="ShapeWgt" id="GroupWgt1.rect2" static="true">
    <wgtStyle width="700" x="0" y="398" fill="rgb(180,180,180)" cx="339.50" cy="1" height="2" nodeName="rect" stroke="rgb(180,180,180)"/>
   </object>
  </object>
  <object class="PageMLTextMgrWgt" id="_PageMLTextMgrWgt" mgrType="Page" mlFileName="">
   <wgtStyle width="0" x="0" y="0" height="0"/>
   <langs defLangId="L1" curLangId="L1">
    <lang removable="false" langCode="en-US" langId="L1" writingsystem="Any" name="English" defaultFont="Arial"/>
    <lang removable="false" langCode="it-IT" langId="L2" writingsystem="Any" name="Italian" defaultFont="Arial"/>
    <lang removable="false" langCode="de-DE" langId="L3" writingsystem="Any" name="German" defaultFont="Arial"/>
    <lang removable="false" langCode="fr-FR" langId="L4" writingsystem="Any" name="French" defaultFont="Arial"/>
    <lang removable="false" langCode="zh-CN" langId="L5" writingsystem="Any" name="Chinese" defaultFont="SimHei"/>
    <lang removable="false" langCode="grc" langId="L6" writingsystem="Any" name="Greek" defaultFont="Arial"/>
    <lang removable="false" langCode="es-ES" langId="L7" writingsystem="Any" name="Spanish" defaultFont="Arial"/>
    <lang removable="false" langCode="ru-RU" langId="L8" writingsystem="Any" name="Russian" defaultFont="Arial"/>
   </langs>
   <MLTexts>
    <MLText L1="Recipes are a collection of data that belongs together, e.g. machine parameter settings or production data. &#xa;A recipe has a fixed data structure that is defined during configuration. A Recipe is made of Elements and Sets." L2="Recipes are a collection of data that belongs together, e.g. machine parameter settings or production data. &#xa;A recipe has a fixed data structure that is defined during configuration. A Recipe is made of Elements and Sets." L3="Recipes are a collection of data that belongs together, e.g. machine parameter settings or production data. &#xa;A recipe has a fixed data structure that is defined during configuration. A Recipe is made of Elements and Sets." L4="Recipes are a collection of data that belongs together, e.g. machine parameter settings or production data. &#xa;A recipe has a fixed data structure that is defined during configuration. A Recipe is made of Elements and Sets." L5="Recipes are a collection of data that belongs together, e.g. machine parameter settings or production data. &#xa;A recipe has a fixed data structure that is defined during configuration. A Recipe is made of Elements and Sets." id="0" L6="Recipes are a collection of data that belongs together, e.g. machine parameter settings or production data. &#xa;A recipe has a fixed data structure that is defined during configuration. A Recipe is made of Elements and Sets." L7="Recipes are a collection of data that belongs together, e.g. machine parameter settings or production data. &#xa;A recipe has a fixed data structure that is defined during configuration. A Recipe is made of Elements and Sets." L8="Recipes are a collection of data that belongs together, e.g. machine parameter settings or production data. &#xa;A recipe has a fixed data structure that is defined during configuration. A Recipe is made of Elements and Sets."/>
    <MLText L1="Recipe data can be written to the controller (Download), and conversely can be read from the controller and saved back on the HMI panel (Upload).&#xa;&#xa;Recipe data can be stored in: FLASH, USB Memory and SD Card.&#xa;&#xa;Recipe structure and default data values can be defined into the project. Selecting [+] is possible to add  Recipe Elements that must be associated to controller Tags. A recipe can have up to 1000 Elements.&#xa;&#xa;Number of Sets define how many different values may assume a Recipe Element (Tag). A recipe can have up to 1000 Sets" L2="Recipe data can be written to the controller (Download), and conversely can be read from the controller and saved back on the HMI panel (Upload).&#xa;&#xa;Recipe data can be stored in: FLASH, USB Memory and SD Card.&#xa;&#xa;Recipe structure and default data values can be defined into the project. Selecting [+] is possible to add  Recipe Elements that must be associated to controller Tags. A recipe can have up to 1000 Elements.&#xa;&#xa;Number of Sets define how many different values may assume a Recipe Element (Tag). A recipe can have up to 1000 Sets" L3="Recipe data can be written to the controller (Download), and conversely can be read from the controller and saved back on the HMI panel (Upload).&#xa;&#xa;Recipe data can be stored in: FLASH, USB Memory and SD Card.&#xa;&#xa;Recipe structure and default data values can be defined into the project. Selecting [+] is possible to add  Recipe Elements that must be associated to controller Tags. A recipe can have up to 1000 Elements.&#xa;&#xa;Number of Sets define how many different values may assume a Recipe Element (Tag). A recipe can have up to 1000 Sets" L4="Recipe data can be written to the controller (Download), and conversely can be read from the controller and saved back on the HMI panel (Upload).&#xa;&#xa;Recipe data can be stored in: FLASH, USB Memory and SD Card.&#xa;&#xa;Recipe structure and default data values can be defined into the project. Selecting [+] is possible to add  Recipe Elements that must be associated to controller Tags. A recipe can have up to 1000 Elements.&#xa;&#xa;Number of Sets define how many different values may assume a Recipe Element (Tag). A recipe can have up to 1000 Sets" L5="Recipe data can be written to the controller (Download), and conversely can be read from the controller and saved back on the HMI panel (Upload).&#xa;&#xa;Recipe data can be stored in: FLASH, USB Memory and SD Card.&#xa;&#xa;Recipe structure and default data values can be defined into the project. Selecting [+] is possible to add  Recipe Elements that must be associated to controller Tags. A recipe can have up to 1000 Elements.&#xa;&#xa;Number of Sets define how many different values may assume a Recipe Element (Tag). A recipe can have up to 1000 Sets" id="3" L6="Recipe data can be written to the controller (Download), and conversely can be read from the controller and saved back on the HMI panel (Upload).&#xa;&#xa;Recipe data can be stored in: FLASH, USB Memory and SD Card.&#xa;&#xa;Recipe structure and default data values can be defined into the project. Selecting [+] is possible to add  Recipe Elements that must be associated to controller Tags. A recipe can have up to 1000 Elements.&#xa;&#xa;Number of Sets define how many different values may assume a Recipe Element (Tag). A recipe can have up to 1000 Sets" L7="Recipe data can be written to the controller (Download), and conversely can be read from the controller and saved back on the HMI panel (Upload).&#xa;&#xa;Recipe data can be stored in: FLASH, USB Memory and SD Card.&#xa;&#xa;Recipe structure and default data values can be defined into the project. Selecting [+] is possible to add  Recipe Elements that must be associated to controller Tags. A recipe can have up to 1000 Elements.&#xa;&#xa;Number of Sets define how many different values may assume a Recipe Element (Tag). A recipe can have up to 1000 Sets" L8="Recipe data can be written to the controller (Download), and conversely can be read from the controller and saved back on the HMI panel (Upload).&#xa;&#xa;Recipe data can be stored in: FLASH, USB Memory and SD Card.&#xa;&#xa;Recipe structure and default data values can be defined into the project. Selecting [+] is possible to add  Recipe Elements that must be associated to controller Tags. A recipe can have up to 1000 Elements.&#xa;&#xa;Number of Sets define how many different values may assume a Recipe Element (Tag). A recipe can have up to 1000 Sets"/>
    <MLText L1="Recipes" L2="Recipes" L3="Recipes" L4="Recipes" L5="Recipes" id="2" L6="Recipes" L7="Recipes" L8="Recipes"/>
   </MLTexts>
  </object>
  <object class="ImageWgt" id="ImageWgt1" static="true">
   <wgtStyle width="300" imagePath="images/Recipes.jpg" x="5" y="5" cx="150" discrete="false" cy="170.50" height="341"/>
  </object>
  <object class="LabelWgt" id="label1">
   <wgtStyle width="310" font-color="rgb(23,30,40)" x="320" forcePaint="2" font-sizepx="13" y="40" font-family="Arial" wrapping="true" cx="155" cy="47.36" height="100" vert-align="top" keypad-type="None" font-size="10"/>
   <links>
    <lang class="MLTextLink" textid="0">
     <MLFontFamily L1="Arial" L2="Arial" L3="Arial" L4="Arial" L5="Arial" L6="Arial" L7="Arial" L8="Arial"/>
    </lang>
   </links>
  </object>
  <object class="LabelWgt" id="label2">
   <wgtStyle width="360" font-color="rgb(23,30,40)" x="320" forcePaint="2" font-sizepx="13" y="145" font-family="Arial" wrapping="true" cx="180" cy="113.69" height="240" vert-align="top" keypad-type="None" font-size="10"/>
   <links>
    <lang class="MLTextLink" textid="3">
     <MLFontFamily L1="Arial" L2="Arial" L3="Arial" L4="Arial" L5="Arial" L6="Arial" L7="Arial" L8="Arial"/>
    </lang>
   </links>
  </object>
  <object class="LabelWgt" id="label3">
   <wgtStyle width="150" font-color="rgb(70,70,70)" x="320" forcePaint="2" font-sizepx="16" y="10" font-family="Arial" font-bold="true" wrapping="true" cx="75" cy="9.47" height="20" vert-align="middle" keypad-type="None" font-size="12"/>
   <links>
    <lang class="MLTextLink" textid="2">
     <MLFontFamily L1="Arial" L2="Arial" L3="Arial" L4="Arial" L5="Arial" L6="Arial" L7="Arial" L8="Arial"/>
    </lang>
   </links>
  </object>
 </object>
</wgtPage>
